{"ast":null,"code":"/*import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://api-mina.learn.cloudlaya.com/api/data');\n      setData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://api-mina.learn.cloudlaya.com/api/data', { name, description });\n      alert('Data added successfully!');\n      setName('');\n      setDescription('');\n      fetchData(); // Fetch data again to update the list\n    } catch (error) {\n      console.error('Error adding data:', error.response ? error.response.data : error.message);\n      alert('Error adding data: ' + (error.response ? error.response.data.error : error.message));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add Data to MySQL via React and Node.js</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Give Me Description Please:\n          <input\n            type=\"text\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Add Data</button>\n      </form>\n      \n      <h2>Data List</h2>\n      <ul>\n        {data.map((item) => (\n          <li key={item.id}>\n            <strong>Name Pleasee:</strong> {item.name} <br />\n            <strong>Description Pleaseeeee HIHIH:</strong> {item.description}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n*/ /*import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('https://api-mina.learn.cloudlaya.com/api/data');\n      setData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('https://api-mina.learn.cloudlaya.com/api/data', { name, description });\n      alert('Data added successfully!');\n      setName('');\n      setDescription('');\n      fetchData(); // Fetch data again to update the list\n    } catch (error) {\n      console.error('Error adding data:', error.response ? error.response.data : error.message);\n      alert('Error adding data: ' + (error.response ? error.response.data.error : error.message));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add Data to MySQL via React and Node.js</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Description:\n          <input\n            type=\"text\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Add Data</button>\n      </form>\n      \n      <h2>Data List</h2>\n      <ul>\n        {data.map((item) => (\n          <li key={item.id}>\n            <strong>Name:</strong> {item.name} <br />\n            <strong>Description:</strong> {item.description}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;*/import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[name,setName]=useState('');const[description,setDescription]=useState('');const[data,setData]=useState([]);useEffect(()=>{fetchData();},[]);const fetchData=async()=>{try{const response=await axios.get('https://api-mina.learn.cloudlaya.com');setData(response.data);}catch(error){console.error('Error fetching data:',error);}};const handleSubmit=async e=>{e.preventDefault();try{await axios.post('https://api-mina.learn.cloudlaya.com',{name,description});alert('Data added successfully!');setName('');setDescription('');fetchData();// Fetch data again to update the list\n}catch(error){console.error('Error adding data:',error.response?error.response.data:error.message);alert('Error adding data: '+(error.response?error.response.data.error:error.message));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Add Data to MySQL via Reactt and Node.jss\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:name,onChange:e=>setName(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Descriptionn:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:description,onChange:e=>setDescription(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Data\"})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Data List PleaseEEEEEEEE\"}),/*#__PURE__*/_jsx(\"ul\",{children:data.map(item=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Nameeee: \"}),\" \",item.name,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Description Please:\"}),\" \",item.description]},item.id))})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","App","name","setName","description","setDescription","data","setData","fetchData","response","get","error","console","handleSubmit","e","preventDefault","post","alert","message","className","children","onSubmit","type","value","onChange","target","required","map","item","id"],"sources":["/home/mina/DevMultiBranch/src/App.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://api-mina.learn.cloudlaya.com/api/data');\n      setData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://api-mina.learn.cloudlaya.com/api/data', { name, description });\n      alert('Data added successfully!');\n      setName('');\n      setDescription('');\n      fetchData(); // Fetch data again to update the list\n    } catch (error) {\n      console.error('Error adding data:', error.response ? error.response.data : error.message);\n      alert('Error adding data: ' + (error.response ? error.response.data.error : error.message));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add Data to MySQL via React and Node.js</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Give Me Description Please:\n          <input\n            type=\"text\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Add Data</button>\n      </form>\n      \n      <h2>Data List</h2>\n      <ul>\n        {data.map((item) => (\n          <li key={item.id}>\n            <strong>Name Pleasee:</strong> {item.name} <br />\n            <strong>Description Pleaseeeee HIHIH:</strong> {item.description}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n*/\n\n/*import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('https://api-mina.learn.cloudlaya.com/api/data');\n      setData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('https://api-mina.learn.cloudlaya.com/api/data', { name, description });\n      alert('Data added successfully!');\n      setName('');\n      setDescription('');\n      fetchData(); // Fetch data again to update the list\n    } catch (error) {\n      console.error('Error adding data:', error.response ? error.response.data : error.message);\n      alert('Error adding data: ' + (error.response ? error.response.data.error : error.message));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add Data to MySQL via React and Node.js</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Description:\n          <input\n            type=\"text\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Add Data</button>\n      </form>\n      \n      <h2>Data List</h2>\n      <ul>\n        {data.map((item) => (\n          <li key={item.id}>\n            <strong>Name:</strong> {item.name} <br />\n            <strong>Description:</strong> {item.description}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;*/\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('https://api-mina.learn.cloudlaya.com');\n      setData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('https://api-mina.learn.cloudlaya.com', { name, description });\n      alert('Data added successfully!');\n      setName('');\n      setDescription('');\n      fetchData(); // Fetch data again to update the list\n    } catch (error) {\n      console.error('Error adding data:', error.response ? error.response.data : error.message);\n      alert('Error adding data: ' + (error.response ? error.response.data.error : error.message));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add Data to MySQL via Reactt and Node.jss</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Descriptionn:\n          <input\n            type=\"text\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Add Data</button>\n      </form>\n      \n      <h2>Data List PleaseEEEEEEEE</h2>\n      <ul>\n        {data.map((item) => (\n          <li key={item.id}>\n            <strong>Nameeee: </strong> {item.name} <br />\n            <strong>Description Please:</strong> {item.description}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}